%div#div_1
  %p
    DIV 1 FROM HAML
  %div#div_2
    DIV 2
    %form{method: :post, action: "/result"}
      %input{type: :text, placeholder: :Username}
      %input{type: :submit, value: :Send}
%div#div_3.text-right
  DIV 3
  %p
    = @text
%div#div_4
  DIV 4
  - my_day = "Thursday"
  /no output ^
  - if @text == "y u no"
    %p
      = @text.upcase
      Something else
      = my_day
      \= 4
  - 7.times do |number|
    %p= number
  %p INLINE TEXT

/ forward-slash to comment; not same line as code though

/ indenting matters even more here because there's no opening and closing things in haml!
/ you just do %[element], e.g. %div to create a div
/ indenting is what decides whether one div is inside another, etc.
/ use the same amount of space for each indent

/ create a div element and assign the id div_1:
/ you can use this shortcut for divs: #div_1 (div id alone is enough if it's a div)
/ and you can also add a class: element#id.class
/ basically, if you don't specify the element, haml will default to div

/ the - is the equivalent of <% %>
/ the = is the equivalent of <%= %>
/ what if you want to print the "="? escape it with "\="

